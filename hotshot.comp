component hotshot "Hotshot Board Driver";
license "GPL";

include "hotshot.h";
include "hotshot.hal.h";

// plasmac requires floating-point
function _ fp;
function x fp;
function yl fp;
function yr fp;
function z fp;
function spi fp;
function sensors;
function arc;
function rms;

// option extra_setup;
// option extra_cleanup;

pin out bit arc_ok;             // wire to plasmac.arc-ok-in
// pin out float arc_voltage;   // wire to plasmac.arc-voltage-in
pin out bit arc_freq_state;
pin out bit torch_breakaway;    // wire to plasmac.breakaway
pin out bit torch_float;        // wire to plasmac:float-switch
pin in bit torch_on;            // wire to plasmac.torch-on
pin in bit ohmic_enable;        // wire to plasmac.ohmic-enable
pin out bit ohmic_probe;        // wire to plasmac.ohmic-probe

pin in bit axis_x_enable;
pin in bit axis_yl_enable;
pin in bit axis_yr_enable;
pin in bit axis_z_enable;

pin in u32 axis_x_chip;
pin in u32 axis_yl_chip;
pin in u32 axis_yr_chip;
pin in u32 axis_z_chip;

pin in u32 axis_x_motor;
pin in u32 axis_yl_motor;
pin in u32 axis_yr_motor;
pin in u32 axis_z_motor;

pin in u32 axis_x_pitch;
pin in u32 axis_yl_pitch;
pin in u32 axis_yr_pitch;
pin in u32 axis_z_pitch;

pin in u32 axis_x_teeth;
pin in u32 axis_yl_teeth;
pin in u32 axis_yr_teeth;
pin in u32 axis_z_teeth;

pin in u32 axis_x_motor_fullsteps_per_rev_cmd;
pin in u32 axis_yl_motor_fullsteps_per_rev_cmd;
pin in u32 axis_yr_motor_fullsteps_per_rev_cmd;
pin in u32 axis_z_motor_fullsteps_per_rev_cmd;

pin out float axis_x_velocity_factor_fb;

pin in float axis_x_max_acceleration_cmd;
pin in float axis_yl_max_acceleration_cmd;
pin in float axis_yr_max_acceleration_cmd;
pin in float axis_z_max_acceleration_cmd;

pin in float axis_x_position_cmd; 
pin in float axis_yl_position_cmd;
pin in float axis_yr_position_cmd;
pin in float axis_z_position_cmd;

pin out float axis_x_position_fb;
pin out float axis_yl_position_fb;
pin out float axis_yr_position_fb;
pin out float axis_z_position_fb;

pin in float axis_x_velocity_cmd;
pin in float axis_yl_velocity_cmd;
pin in float axis_yr_velocity_cmd;
pin in float axis_z_velocity_cmd;

pin out float axis_x_velocity_fb;
pin out float axis_yl_velocity_fb;
pin out float axis_yr_velocity_fb;
pin out float axis_z_velocity_fb;

pin in float axis_x_acceleration_cmd;
pin in float axis_yl_acceleration_cmd;
pin in float axis_yr_acceleration_cmd;
pin in float axis_z_acceleration_cmd;

pin out float axis_x_acceleration_fb;
pin out float axis_yl_acceleration_fb;
pin out float axis_yr_acceleration_fb;
pin out float axis_z_acceleration_fb;

pin out s32 axis_x_tmc_velocity_fb;
pin out s32 axis_yl_tmc_velocity_fb;
pin out s32 axis_yr_tmc_velocity_fb;
pin out s32 axis_z_tmc_velocity_fb;

pin out s32 axis_x_tmc_velocity_cmd;
pin out s32 axis_yl_tmc_velocity_cmd;
pin out s32 axis_yr_tmc_velocity_cmd;
pin out s32 axis_z_tmc_velocity_cmd;

pin out s32 axis_x_tmc_position_cmd;
pin out s32 axis_yl_tmc_position_cmd;
pin out s32 axis_yr_tmc_position_cmd;
pin out s32 axis_z_tmc_position_cmd;

pin out s32 axis_x_tmc_position_fb;
pin out s32 axis_yl_tmc_position_fb;
pin out s32 axis_yr_tmc_position_fb;
pin out s32 axis_z_tmc_position_fb;

pin out u32 axis_x_tmc_max_acceleration_fb;
pin out u32 axis_yl_tmc_max_acceleration_fb;
pin out u32 axis_yr_tmc_max_acceleration_fb;
pin out u32 axis_z_tmc_max_acceleration_fb;

pin in bit axis_x_homing_cmd;
pin in bit axis_yl_homing_cmd;
pin in bit axis_yr_homing_cmd;
pin in bit axis_z_homing_cmd;

pin out u32 axis_x_homing_state_fb;
pin out u32 axis_yl_homing_state_fb;
pin out u32 axis_yr_homing_state_fb;
pin out u32 axis_z_homing_state_fb;

pin out bit axis_x_home_sw;
pin out bit axis_yl_home_sw;
pin out bit axis_yr_home_sw;
pin out bit axis_z_home_sw;

pin out bit axis_x_neg_limit_sw;
pin out bit axis_yl_neg_limit_sw;
pin out bit axis_yr_neg_limit_sw;
pin out bit axis_z_neg_limit_sw;

pin in s32 axis_x_tmc_sg_thresh_cmd;
pin in s32 axis_yl_tmc_sg_thresh_cmd;
pin in s32 axis_yr_tmc_sg_thresh_cmd;
pin in s32 axis_z_tmc_sg_thresh_cmd;

// Not actually a TMC value
// Used in homing routine.
pin in u32 axis_x_tmc_sg_trigger_thresh_cmd;
pin in u32 axis_yl_tmc_sg_trigger_thresh_cmd;
pin in u32 axis_yr_tmc_sg_trigger_thresh_cmd;
pin in u32 axis_z_tmc_sg_trigger_thresh_cmd;

pin in bit axis_x_tmc_sg_stop_cmd;
pin in bit axis_yl_tmc_sg_stop_cmd;
pin in bit axis_yr_tmc_sg_stop_cmd;
pin in bit axis_z_tmc_sg_stop_cmd;

pin in u32 axis_x_tmc_run_current_cmd;
pin in u32 axis_yl_tmc_run_current_cmd;
pin in u32 axis_yr_tmc_run_current_cmd;
pin in u32 axis_z_tmc_run_current_cmd;

pin in u32 axis_x_tmc_hold_current_cmd;
pin in u32 axis_yl_tmc_hold_current_cmd;
pin in u32 axis_yr_tmc_hold_current_cmd;
pin in u32 axis_z_tmc_hold_current_cmd;

pin in u32 axis_x_microsteps_cmd;
pin in u32 axis_yl_microsteps_cmd;
pin in u32 axis_yr_microsteps_cmd;
pin in u32 axis_z_microsteps_cmd;

pin in u32 axis_x_tmc_cs_thresh_cmd;
pin in u32 axis_yl_tmc_cs_thresh_cmd;
pin in u32 axis_yr_tmc_cs_thresh_cmd;
pin in u32 axis_z_tmc_cs_thresh_cmd;

pin out u32 axis_x_tmc_microstep_resolution_fb;
pin out u32 axis_yl_tmc_microstep_resolution_fb;
pin out u32 axis_yr_tmc_microstep_resolution_fb;
pin out u32 axis_z_tmc_microstep_resolution_fb;

pin out s32 axis_x_tmc_motor_load_fb;
pin out s32 axis_yl_tmc_motor_load_fb;
pin out s32 axis_yr_tmc_motor_load_fb;
pin out s32 axis_z_tmc_motor_load_fb;

pin out u32 axis_x_tmc_motor_current_fb;
pin out u32 axis_yl_tmc_motor_current_fb;
pin out u32 axis_yr_tmc_motor_current_fb;
pin out u32 axis_z_tmc_motor_current_fb;

pin out bit axis_x_tmc_motor_stall_fb;
pin out bit axis_yl_tmc_motor_stall_fb;
pin out bit axis_yr_tmc_motor_stall_fb;
pin out bit axis_z_tmc_motor_stall_fb;

pin out bit axis_x_tmc_motor_standstill_fb;
pin out bit axis_yl_tmc_motor_standstill_fb;
pin out bit axis_yr_tmc_motor_standstill_fb;
pin out bit axis_z_tmc_motor_standstill_fb;

pin out bit axis_x_tmc_motor_full_stepping_fb;
pin out bit axis_yl_tmc_motor_full_stepping_fb;
pin out bit axis_yr_tmc_motor_full_stepping_fb;
pin out bit axis_z_tmc_motor_full_stepping_fb;

pin out bit axis_x_tmc_motor_overtemp_warning_fb;
pin out bit axis_yl_tmc_motor_overtemp_warning_fb;
pin out bit axis_yr_tmc_motor_overtemp_warning_fb;
pin out bit axis_z_tmc_motor_overtemp_warning_fb;

pin out bit axis_x_tmc_motor_overtemp_alarm_fb;
pin out bit axis_yl_tmc_motor_overtemp_alarm_fb;
pin out bit axis_yr_tmc_motor_overtemp_alarm_fb;
pin out bit axis_z_tmc_motor_overtemp_alarm_fb;

// pin out bit axis_x_tmc_position_reached_fb;
// pin out bit axis_yl_tmc_position_reached_fb;
// pin out bit axis_yr_tmc_position_reached_fb;
// pin out bit axis_z_tmc_position_reached_fb;

pin out bit axis_x_tmc_t_zerowait_active_fb;
pin out bit axis_yl_tmc_t_zerowait_active_fb;
pin out bit axis_yr_tmc_t_zerowait_active_fb;
pin out bit axis_z_tmc_t_zerowait_active_fb;

pin out bit axis_x_tmc_velocity_reached_fb;
pin out bit axis_yl_tmc_velocity_reached_fb;
pin out bit axis_yr_tmc_velocity_reached_fb;
pin out bit axis_z_tmc_velocity_reached_fb;

pin out float axis_x_tmc_max_velocity_fb;
pin out float axis_yl_tmc_max_velocity_fb;
pin out float axis_yr_tmc_max_velocity_fb;
pin out float axis_z_tmc_max_velocity_fb;

pin in u32 axis_x_tmc_current_hold_delay_cmd;
pin in u32 axis_yl_tmc_current_hold_delay_cmd;
pin in u32 axis_yr_tmc_current_hold_delay_cmd;
pin in u32 axis_z_tmc_current_hold_delay_cmd;

pin in u32 axis_x_tmc_ramp_mode_cmd;
pin in u32 axis_yl_tmc_ramp_mode_cmd;
pin in u32 axis_yr_tmc_ramp_mode_cmd;
pin in u32 axis_z_tmc_ramp_mode_cmd;

pin in u32 axis_x_tmc_ramp_vstart_cmd;
pin in u32 axis_yl_tmc_ramp_vstart_cmd;
pin in u32 axis_yr_tmc_ramp_vstart_cmd;
pin in u32 axis_z_tmc_ramp_vstart_cmd;

pin in u32 axis_x_tmc_ramp_vstop_cmd;
pin in u32 axis_yl_tmc_ramp_vstop_cmd;
pin in u32 axis_yr_tmc_ramp_vstop_cmd;
pin in u32 axis_z_tmc_ramp_vstop_cmd;

pin in u32 axis_x_tmc_ramp_v1_cmd;
pin in u32 axis_yl_tmc_ramp_v1_cmd;
pin in u32 axis_yr_tmc_ramp_v1_cmd;
pin in u32 axis_z_tmc_ramp_v1_cmd;

pin in u32 axis_x_tmc_ramp_a1_cmd;
pin in u32 axis_yl_tmc_ramp_a1_cmd;
pin in u32 axis_yr_tmc_ramp_a1_cmd;
pin in u32 axis_z_tmc_ramp_a1_cmd;

pin in u32 axis_x_tmc_ramp_dmax_cmd;
pin in u32 axis_yl_tmc_ramp_dmax_cmd;
pin in u32 axis_yr_tmc_ramp_dmax_cmd;
pin in u32 axis_z_tmc_ramp_dmax_cmd;

pin in u32 axis_x_tmc_ramp_d1_cmd;
pin in u32 axis_yl_tmc_ramp_d1_cmd;
pin in u32 axis_yr_tmc_ramp_d1_cmd;
pin in u32 axis_z_tmc_ramp_d1_cmd;

pin in u32 axis_x_tmc_ramp_tzerowait_cmd;
pin in u32 axis_yl_tmc_ramp_tzerowait_cmd;
pin in u32 axis_yr_tmc_ramp_tzerowait_cmd;
pin in u32 axis_z_tmc_ramp_tzerowait_cmd;

pin in u32 axis_x_tmc_coolstep_sfilt_cmd;
pin in u32 axis_yl_tmc_coolstep_sfilt_cmd;
pin in u32 axis_yr_tmc_coolstep_sfilt_cmd;
pin in u32 axis_z_tmc_coolstep_sfilt_cmd;

pin in u32 axis_x_tmc_coolstep_seimin_cmd;
pin in u32 axis_yl_tmc_coolstep_seimin_cmd;
pin in u32 axis_yr_tmc_coolstep_seimin_cmd;
pin in u32 axis_z_tmc_coolstep_seimin_cmd;

pin in u32 axis_x_tmc_coolstep_sedn_cmd;
pin in u32 axis_yl_tmc_coolstep_sedn_cmd;
pin in u32 axis_yr_tmc_coolstep_sedn_cmd;
pin in u32 axis_z_tmc_coolstep_sedn_cmd;

pin in u32 axis_x_tmc_coolstep_seup_cmd;
pin in u32 axis_yl_tmc_coolstep_seup_cmd;
pin in u32 axis_yr_tmc_coolstep_seup_cmd;
pin in u32 axis_z_tmc_coolstep_seup_cmd;

pin in u32 axis_x_tmc_coolstep_semin_cmd;
pin in u32 axis_yl_tmc_coolstep_semin_cmd;
pin in u32 axis_yr_tmc_coolstep_semin_cmd;
pin in u32 axis_z_tmc_coolstep_semin_cmd;

pin in u32 axis_x_tmc_coolstep_semax_cmd;
pin in u32 axis_yl_tmc_coolstep_semax_cmd;
pin in u32 axis_yr_tmc_coolstep_semax_cmd;
pin in u32 axis_z_tmc_coolstep_semax_cmd;

pin in u32 axis_x_tmc_chop_mode_cmd;
pin in u32 axis_yl_tmc_chop_mode_cmd;
pin in u32 axis_yr_tmc_chop_mode_cmd;
pin in u32 axis_z_tmc_chop_mode_cmd;

pin in u32 axis_x_tmc_chop_vhigh_cmd;
pin in u32 axis_yl_tmc_chop_vhigh_cmd;
pin in u32 axis_yr_tmc_chop_vhigh_cmd;
pin in u32 axis_z_tmc_chop_vhigh_cmd;

pin in u32 axis_x_tmc_chop_vhighchm_cmd;
pin in u32 axis_yl_tmc_chop_vhighchm_cmd;
pin in u32 axis_yr_tmc_chop_vhighchm_cmd;
pin in u32 axis_z_tmc_chop_vhighchm_cmd;

pin in u32 axis_x_tmc_chop_vhighfs_cmd;
pin in u32 axis_yl_tmc_chop_vhighfs_cmd;
pin in u32 axis_yr_tmc_chop_vhighfs_cmd;
pin in u32 axis_z_tmc_chop_vhighfs_cmd;

pin in u32 axis_x_tmc_chop_tbl_cmd;
pin in u32 axis_yl_tmc_chop_tbl_cmd;
pin in u32 axis_yr_tmc_chop_tbl_cmd;
pin in u32 axis_z_tmc_chop_tbl_cmd;

pin in u32 axis_x_tmc_chop_hend_cmd;
pin in u32 axis_yl_tmc_chop_hend_cmd;
pin in u32 axis_yr_tmc_chop_hend_cmd;
pin in u32 axis_z_tmc_chop_hend_cmd;

pin in u32 axis_x_tmc_chop_hstrt_cmd;
pin in u32 axis_yl_tmc_chop_hstrt_cmd;
pin in u32 axis_yr_tmc_chop_hstrt_cmd;
pin in u32 axis_z_tmc_chop_hstrt_cmd;

pin in u32 axis_x_tmc_chop_toff_cmd;
pin in u32 axis_yl_tmc_chop_toff_cmd;
pin in u32 axis_yr_tmc_chop_toff_cmd;
pin in u32 axis_z_tmc_chop_toff_cmd;

pin in u32 axis_x_tmc_chop_vsense_cmd;
pin in u32 axis_yl_tmc_chop_vsense_cmd;
pin in u32 axis_yr_tmc_chop_vsense_cmd;
pin in u32 axis_z_tmc_chop_vsense_cmd;

pin in u32 axis_x_tmc_sw_en_softstop;
pin in u32 axis_yl_tmc_sw_en_softstop;
pin in u32 axis_yr_tmc_sw_en_softstop;
pin in u32 axis_z_tmc_sw_en_softstop;

pin in float axis_x_tmc_vmax_factor_cmd;
pin in float axis_yl_tmc_vmax_factor_cmd;
pin in float axis_yr_tmc_vmax_factor_cmd;
pin in float axis_z_tmc_vmax_factor_cmd;

pin out bit axis_x_tmc_status_sg_fb;
pin out bit axis_yl_tmc_status_sg_fb;
pin out bit axis_yr_tmc_status_sg_fb;
pin out bit axis_z_tmc_status_sg_fb;

pin out bit axis_x_tmc_position_reached_fb;
pin out bit axis_yl_tmc_position_reached_fb;
pin out bit axis_yr_tmc_position_reached_fb;
pin out bit axis_z_tmc_position_reached_fb;

pin out bit axis_x_tmc_event_pos_reached_fb;
pin out bit axis_yl_tmc_event_pos_reached_fb;
pin out bit axis_yr_tmc_event_pos_reached_fb;
pin out bit axis_z_tmc_event_pos_reached_fb;

pin out bit axis_x_tmc_event_stop_sg_fb;
pin out bit axis_yl_tmc_event_stop_sg_fb;
pin out bit axis_yr_tmc_event_stop_sg_fb;
pin out bit axis_z_tmc_event_stop_sg_fb;

pin out bit axis_x_tmc_event_stop_r_fb;
pin out bit axis_yl_tmc_event_stop_r_fb;
pin out bit axis_yr_tmc_event_stop_r_fb;
pin out bit axis_z_tmc_event_stop_r_fb;

pin out bit axis_x_tmc_event_stop_l_fb;
pin out bit axis_yl_tmc_event_stop_l_fb;
pin out bit axis_yr_tmc_event_stop_l_fb;
pin out bit axis_z_tmc_event_stop_l_fb;

pin out bit axis_x_tmc_status_latch_r_fb;
pin out bit axis_yl_tmc_status_latch_r_fb;
pin out bit axis_yr_tmc_status_latch_r_fb;
pin out bit axis_z_tmc_status_latch_r_fb;

pin out bit axis_x_tmc_status_latch_l_fb;
pin out bit axis_yl_tmc_status_latch_l_fb;
pin out bit axis_yr_tmc_status_latch_l_fb;
pin out bit axis_z_tmc_status_latch_l_fb;

pin out bit axis_x_tmc_status_stop_r_fb;
pin out bit axis_yl_tmc_status_stop_r_fb;
pin out bit axis_yr_tmc_status_stop_r_fb;
pin out bit axis_z_tmc_status_stop_r_fb;

pin out bit axis_x_tmc_status_stop_l_fb;
pin out bit axis_yl_tmc_status_stop_l_fb;
pin out bit axis_yr_tmc_status_stop_l_fb;
pin out bit axis_z_tmc_status_stop_l_fb;

pin out bit machine_estop_fb;
pin in bit machine_estop_cmd;

variable joint_t joints[4];

// For RMS function
pin in float voltage_in;
pin out float rms_out;
param rw unsigned num_samples = 100;
variable float sample_buffer[100];
variable unsigned current_index = 0;
variable float sum_of_squares = 0.0;

;;

#include "stdlib.h"
#include "stdio.h"
#include "math.h"
#include <rtapi.h>
#include "bcm2835.h"
#include "rpi.h"

// X
#undef axis_x_enable
#undef axis_x_homing_cmd
#undef axis_x_pitch
#undef axis_x_teeth
#undef axis_x_motor_fullsteps_per_rev_cmd
#undef axis_x_position_cmd
#undef axis_x_velocity_cmd
#undef axis_x_acceleration_cmd
#undef axis_x_microsteps_cmd
#undef axis_x_max_acceleration_cmd
#undef axis_x_tmc_sg_stop_cmd
#undef axis_x_tmc_sg_thresh_cmd
#undef axis_x_tmc_sg_trigger_thresh_cmd
#undef axis_x_tmc_run_current_cmd
#undef axis_x_tmc_hold_current_cmd
#undef axis_x_tmc_cs_thresh_cmd
#undef axis_x_tmc_current_hold_delay_cmd
#undef axis_x_tmc_ramp_mode_cmd
#undef axis_x_tmc_ramp_vstart_cmd
#undef axis_x_tmc_ramp_vstop_cmd
#undef axis_x_tmc_ramp_v1_cmd
#undef axis_x_tmc_ramp_a1_cmd
#undef axis_x_tmc_ramp_dmax_cmd
#undef axis_x_tmc_ramp_d1_cmd
#undef axis_x_tmc_ramp_tzerowait_cmd
#undef axis_x_tmc_coolstep_sfilt_cmd
#undef axis_x_tmc_coolstep_seimin_cmd
#undef axis_x_tmc_coolstep_sedn_cmd
#undef axis_x_tmc_coolstep_seup_cmd
#undef axis_x_tmc_coolstep_semin_cmd
#undef axis_x_tmc_coolstep_semax_cmd
#undef axis_x_tmc_chop_mode_cmd
#undef axis_x_tmc_chop_vhigh_cmd
#undef axis_x_tmc_chop_vhighchm_cmd
#undef axis_x_tmc_chop_vhighfs_cmd
#undef axis_x_tmc_chop_tbl_cmd
#undef axis_x_tmc_chop_hend_cmd
#undef axis_x_tmc_chop_hstrt_cmd
#undef axis_x_tmc_chop_toff_cmd
#undef axis_x_tmc_chop_vsense_cmd
#undef axis_x_tmc_sw_en_softstop
#undef axis_x_tmc_vmax_factor_cmd
// YL
#undef axis_yl_enable
#undef axis_yl_homing_cmd
#undef axis_yl_pitch
#undef axis_yl_teeth
#undef axis_yl_motor_fullsteps_per_rev_cmd
#undef axis_yl_position_cmd
#undef axis_yl_velocity_cmd
#undef axis_yl_acceleration_cmd
#undef axis_yl_microsteps_cmd
#undef axis_yl_max_acceleration_cmd
#undef axis_yl_tmc_sg_stop_cmd
#undef axis_yl_tmc_sg_thresh_cmd
#undef axis_yl_tmc_sg_trigger_thresh_cmd
#undef axis_yl_tmc_run_current_cmd
#undef axis_yl_tmc_hold_current_cmd
#undef axis_yl_tmc_cs_thresh_cmd
#undef axis_yl_tmc_current_hold_delay_cmd
#undef axis_yl_tmc_ramp_mode_cmd
#undef axis_yl_tmc_ramp_vstart_cmd
#undef axis_yl_tmc_ramp_vstop_cmd
#undef axis_yl_tmc_ramp_v1_cmd
#undef axis_yl_tmc_ramp_a1_cmd
#undef axis_yl_tmc_ramp_dmax_cmd
#undef axis_yl_tmc_ramp_d1_cmd
#undef axis_yl_tmc_ramp_tzerowait_cmd
#undef axis_yl_tmc_coolstep_sfilt_cmd
#undef axis_yl_tmc_coolstep_seimin_cmd
#undef axis_yl_tmc_coolstep_sedn_cmd
#undef axis_yl_tmc_coolstep_seup_cmd
#undef axis_yl_tmc_coolstep_semin_cmd
#undef axis_yl_tmc_coolstep_semax_cmd
#undef axis_yl_tmc_chop_mode_cmd
#undef axis_yl_tmc_chop_vhigh_cmd
#undef axis_yl_tmc_chop_vhighchm_cmd
#undef axis_yl_tmc_chop_vhighfs_cmd
#undef axis_yl_tmc_chop_tbl_cmd
#undef axis_yl_tmc_chop_hend_cmd
#undef axis_yl_tmc_chop_hstrt_cmd
#undef axis_yl_tmc_chop_toff_cmd
#undef axis_yl_tmc_chop_vsense_cmd
#undef axis_yl_tmc_sw_en_softstop
#undef axis_yl_tmc_vmax_factor_cmd
// YR
#undef axis_yr_enable
#undef axis_yr_homing_cmd
#undef axis_yr_pitch
#undef axis_yr_teeth
#undef axis_yr_motor_fullsteps_per_rev_cmd
#undef axis_yr_position_cmd
#undef axis_yr_velocity_cmd
#undef axis_yr_acceleration_cmd
#undef axis_yr_microsteps_cmd
#undef axis_yr_max_acceleration_cmd
#undef axis_yr_tmc_sg_stop_cmd
#undef axis_yr_tmc_sg_thresh_cmd
#undef axis_yr_tmc_sg_trigger_thresh_cmd
#undef axis_yr_tmc_run_current_cmd
#undef axis_yr_tmc_hold_current_cmd
#undef axis_yr_tmc_cs_thresh_cmd
#undef axis_yr_tmc_current_hold_delay_cmd
#undef axis_yr_tmc_ramp_mode_cmd
#undef axis_yr_tmc_ramp_vstart_cmd
#undef axis_yr_tmc_ramp_vstop_cmd
#undef axis_yr_tmc_ramp_v1_cmd
#undef axis_yr_tmc_ramp_a1_cmd
#undef axis_yr_tmc_ramp_dmax_cmd
#undef axis_yr_tmc_ramp_d1_cmd
#undef axis_yr_tmc_ramp_tzerowait_cmd
#undef axis_yr_tmc_coolstep_sfilt_cmd
#undef axis_yr_tmc_coolstep_seimin_cmd
#undef axis_yr_tmc_coolstep_sedn_cmd
#undef axis_yr_tmc_coolstep_seup_cmd
#undef axis_yr_tmc_coolstep_semin_cmd
#undef axis_yr_tmc_coolstep_semax_cmd
#undef axis_yr_tmc_chop_mode_cmd
#undef axis_yr_tmc_chop_vhigh_cmd
#undef axis_yr_tmc_chop_vhighchm_cmd
#undef axis_yr_tmc_chop_vhighfs_cmd
#undef axis_yr_tmc_chop_tbl_cmd
#undef axis_yr_tmc_chop_hend_cmd
#undef axis_yr_tmc_chop_hstrt_cmd
#undef axis_yr_tmc_chop_toff_cmd
#undef axis_yr_tmc_chop_vsense_cmd
#undef axis_yr_tmc_sw_en_softstop
#undef axis_yr_tmc_vmax_factor_cmd
// Z
#undef axis_z_enable
#undef axis_z_homing_cmd
#undef axis_z_pitch
#undef axis_z_teeth
#undef axis_z_motor_fullsteps_per_rev_cmd
#undef axis_z_position_cmd
#undef axis_z_velocity_cmd
#undef axis_z_acceleration_cmd
#undef axis_z_microsteps_cmd
#undef axis_z_max_acceleration_cmd
#undef axis_z_tmc_sg_stop_cmd
#undef axis_z_tmc_sg_thresh_cmd
#undef axis_z_tmc_sg_trigger_thresh_cmd
#undef axis_z_tmc_run_current_cmd
#undef axis_z_tmc_hold_current_cmd
#undef axis_z_tmc_cs_thresh_cmd
#undef axis_z_tmc_current_hold_delay_cmd
#undef axis_z_tmc_ramp_mode_cmd
#undef axis_z_tmc_ramp_vstart_cmd
#undef axis_z_tmc_ramp_vstop_cmd
#undef axis_z_tmc_ramp_v1_cmd
#undef axis_z_tmc_ramp_a1_cmd
#undef axis_z_tmc_ramp_dmax_cmd
#undef axis_z_tmc_ramp_d1_cmd
#undef axis_z_tmc_ramp_tzerowait_cmd
#undef axis_z_tmc_coolstep_sfilt_cmd
#undef axis_z_tmc_coolstep_seimin_cmd
#undef axis_z_tmc_coolstep_sedn_cmd
#undef axis_z_tmc_coolstep_seup_cmd
#undef axis_z_tmc_coolstep_semin_cmd
#undef axis_z_tmc_coolstep_semax_cmd
#undef axis_z_tmc_chop_mode_cmd
#undef axis_z_tmc_chop_vhigh_cmd
#undef axis_z_tmc_chop_vhighchm_cmd
#undef axis_z_tmc_chop_vhighfs_cmd
#undef axis_z_tmc_chop_tbl_cmd
#undef axis_z_tmc_chop_hend_cmd
#undef axis_z_tmc_chop_hstrt_cmd
#undef axis_z_tmc_chop_toff_cmd
#undef axis_z_tmc_chop_vsense_cmd
#undef axis_z_tmc_sw_en_softstop
#undef axis_z_tmc_vmax_factor_cmd

#undef axis_x_motor
#undef axis_yl_motor
#undef axis_yr_motor
#undef axis_z_motor
#undef axis_x_chip
#undef axis_yl_chip
#undef axis_yr_chip
#undef axis_z_chip

#undef joints

bool IS_INITIALIZED = FALSE;
// bool NEEDS_RPI_INIT = TRUE;
// bool NEEDS_MOTOR_INIT = TRUE;
// bool NEEDS_BOARD_INIT = TRUE;
// 0 = X, 1 = YL, 2 = YR, 3 = Z
// joint_t MOTORS[MOTOR_COUNT];

/**
 * Call at the beginning of every FUNCTION.
 * Only exists because EXTRA_SETUP is useless.
 */
void ensure_initialized(struct __comp_state * __comp_inst)
{
    if (IS_INITIALIZED == TRUE)
    {
        return;
    }

    printf("hotshot: Initializing driver\n");

    __comp_inst->joints[0] = (joint_t) {
        .max_acceleration_cmd           = __comp_inst->axis_x_max_acceleration_cmd,
        .pitch_cmd                      = __comp_inst->axis_x_pitch,
        .teeth_cmd                      = __comp_inst->axis_x_teeth,
        .motor_fullsteps_per_rev_cmd    = __comp_inst->axis_x_motor_fullsteps_per_rev_cmd,
        .microsteps_cmd                 = __comp_inst->axis_x_microsteps_cmd,
        .enable_cmd                     = __comp_inst->axis_x_enable,
        .homing_cmd                     = __comp_inst->axis_x_homing_cmd,
        .position_cmd                   = __comp_inst->axis_x_position_cmd,
        .velocity_cmd                   = __comp_inst->axis_x_velocity_cmd,
        .acceleration_cmd               = __comp_inst->axis_x_acceleration_cmd,
        .position_fb                    = &axis_x_position_fb,
        .velocity_fb                    = &axis_x_velocity_fb,
        .velocity_factor                = &axis_x_velocity_factor_fb,
        .acceleration_fb                = &axis_x_acceleration_fb,
        .home_sw_fb                     = &axis_x_home_sw,
        .homing_state_fb                = &axis_x_homing_state_fb,
        .estop_fb                       = &machine_estop_fb,
        .torch_breakaway_fb             = &torch_breakaway,
        .tmc = (tmc5041_motor_t) {
            .velocity_time_ref          = tmc5041_velocity_time_ref(TMC5041_CLOCK_HZ),
            .acceleration_time_ref      = tmc5041_acceleration_time_ref(TMC5041_CLOCK_HZ),
            .chip                       = __comp_inst->axis_x_chip,
            .motor                      = __comp_inst->axis_x_motor,
            .run_current_cmd            = __comp_inst->axis_x_tmc_run_current_cmd,
            .hold_current_cmd           = __comp_inst->axis_x_tmc_hold_current_cmd,
            .cs_thresh_cmd              = __comp_inst->axis_x_tmc_cs_thresh_cmd,
            .sg_stop_cmd                = __comp_inst->axis_x_tmc_sg_stop_cmd,
            .sg_thresh_cmd              = __comp_inst->axis_x_tmc_sg_thresh_cmd,
            .sg_trigger_thresh_cmd      = __comp_inst->axis_x_tmc_sg_trigger_thresh_cmd,
            .current_hold_delay_cmd     = __comp_inst->axis_x_tmc_current_hold_delay_cmd,
            .ramp_mode_cmd              = __comp_inst->axis_x_tmc_ramp_mode_cmd,
            .ramp_vstart_cmd            = __comp_inst->axis_x_tmc_ramp_vstart_cmd,
            .ramp_vstop_cmd             = __comp_inst->axis_x_tmc_ramp_vstop_cmd,
            .ramp_v1_cmd                = __comp_inst->axis_x_tmc_ramp_v1_cmd,
            .ramp_a1_cmd                = __comp_inst->axis_x_tmc_ramp_a1_cmd,
            .ramp_dmax_cmd              = __comp_inst->axis_x_tmc_ramp_dmax_cmd,
            .ramp_d1_cmd                = __comp_inst->axis_x_tmc_ramp_d1_cmd,
            .ramp_tzerowait_cmd         = __comp_inst->axis_x_tmc_ramp_tzerowait_cmd,
            .coolstep_sfilt_cmd         = __comp_inst->axis_x_tmc_coolstep_sfilt_cmd,
            .coolstep_seimin_cmd        = __comp_inst->axis_x_tmc_coolstep_seimin_cmd,
            .coolstep_sedn_cmd          = __comp_inst->axis_x_tmc_coolstep_sedn_cmd,
            .coolstep_seup_cmd          = __comp_inst->axis_x_tmc_coolstep_seup_cmd,
            .coolstep_semin_cmd         = __comp_inst->axis_x_tmc_coolstep_semin_cmd,
            .coolstep_semax_cmd         = __comp_inst->axis_x_tmc_coolstep_semax_cmd,
            .chop_mode_cmd              = __comp_inst->axis_x_tmc_chop_mode_cmd,
            .chop_vhigh_cmd             = __comp_inst->axis_x_tmc_chop_vhigh_cmd,
            .chop_vhighchm_cmd          = __comp_inst->axis_x_tmc_chop_vhighchm_cmd,
            .chop_vhighfs_cmd           = __comp_inst->axis_x_tmc_chop_vhighfs_cmd,
            .chop_tbl_cmd               = __comp_inst->axis_x_tmc_chop_tbl_cmd,
            .chop_hend_cmd              = __comp_inst->axis_x_tmc_chop_hend_cmd,
            .chop_hstrt_cmd             = __comp_inst->axis_x_tmc_chop_hstrt_cmd,
            .chop_toff_cmd              = __comp_inst->axis_x_tmc_chop_toff_cmd,
            .chop_vsense_cmd            = __comp_inst->axis_x_tmc_chop_vsense_cmd,
            .sw_en_softstop             = __comp_inst->axis_x_tmc_sw_en_softstop,
            .vmax_factor_cmd            = __comp_inst->axis_x_tmc_vmax_factor_cmd,
            .position_fb                = &axis_x_tmc_position_fb,
            .position_cmd               = &axis_x_tmc_position_cmd,
            .velocity_fb                = &axis_x_tmc_velocity_fb,
            .velocity_cmd               = &axis_x_tmc_velocity_cmd,
            .motor_standstill_fb        = &axis_x_tmc_motor_standstill_fb,
            .motor_full_stepping_fb     = &axis_x_tmc_motor_full_stepping_fb,
            .motor_overtemp_warning_fb  = &axis_x_tmc_motor_overtemp_warning_fb,
            .motor_overtemp_alarm_fb    = &axis_x_tmc_motor_overtemp_alarm_fb,
            .motor_load_fb              = &axis_x_tmc_motor_load_fb,
            .motor_current_fb           = &axis_x_tmc_motor_current_fb,
            .motor_stall_fb             = &axis_x_tmc_motor_stall_fb,
            .microstep_resolution_fb    = &axis_x_tmc_microstep_resolution_fb,
            .velocity_reached_fb        = &axis_x_tmc_velocity_reached_fb,
            .status_sg_fb               = &axis_x_tmc_status_sg_fb,
            .position_reached_fb        = &axis_x_tmc_position_reached_fb,
            .event_pos_reached_fb       = &axis_x_tmc_event_pos_reached_fb,
            .event_stop_sg_fb           = &axis_x_tmc_event_stop_sg_fb,
            .event_stop_r_fb            = &axis_x_tmc_event_stop_r_fb,
            .event_stop_l_fb            = &axis_x_tmc_event_stop_l_fb,
            .status_latch_r_fb          = &axis_x_tmc_status_latch_r_fb,
            .status_latch_l_fb          = &axis_x_tmc_status_latch_l_fb,
            .status_stop_r_fb           = &axis_x_tmc_status_stop_r_fb,
            .status_stop_l_fb           = &axis_x_tmc_status_stop_l_fb
        }
    };
    __comp_inst->joints[1] = (joint_t) {
        .max_acceleration_cmd           = __comp_inst->axis_yl_max_acceleration_cmd,
        .pitch_cmd                      = __comp_inst->axis_yl_pitch,
        .teeth_cmd                      = __comp_inst->axis_yl_teeth,
        .motor_fullsteps_per_rev_cmd    = __comp_inst->axis_yl_motor_fullsteps_per_rev_cmd,
        .microsteps_cmd                 = __comp_inst->axis_yl_microsteps_cmd,
        .enable_cmd                     = __comp_inst->axis_yl_enable,
        .homing_cmd                     = __comp_inst->axis_yl_homing_cmd,
        .position_cmd                   = __comp_inst->axis_yl_position_cmd,
        .velocity_cmd                   = __comp_inst->axis_yl_velocity_cmd,
        .acceleration_cmd               = __comp_inst->axis_yl_acceleration_cmd,
        .position_fb                    = &axis_yl_position_fb,
        .velocity_fb                    = &axis_yl_velocity_fb,
        .acceleration_fb                = &axis_yl_acceleration_fb,
        .home_sw_fb                     = &axis_yl_home_sw,
        .homing_state_fb                = &axis_yl_homing_state_fb,
        .estop_fb                       = &machine_estop_fb,
        .torch_breakaway_fb             = &torch_breakaway,
        .tmc = (tmc5041_motor_t) {
            .velocity_time_ref          = tmc5041_velocity_time_ref(TMC5041_CLOCK_HZ),
            .acceleration_time_ref      = tmc5041_acceleration_time_ref(TMC5041_CLOCK_HZ),
            .chip                       = __comp_inst->axis_yl_chip,
            .motor                      = __comp_inst->axis_yl_motor,
            .run_current_cmd            = __comp_inst->axis_yl_tmc_run_current_cmd,
            .hold_current_cmd           = __comp_inst->axis_yl_tmc_hold_current_cmd,
            .cs_thresh_cmd              = __comp_inst->axis_yl_tmc_cs_thresh_cmd,
            .sg_stop_cmd                = __comp_inst->axis_yl_tmc_sg_stop_cmd,
            .sg_thresh_cmd              = __comp_inst->axis_yl_tmc_sg_thresh_cmd,
            .sg_trigger_thresh_cmd      = __comp_inst->axis_yl_tmc_sg_trigger_thresh_cmd,
            .current_hold_delay_cmd     = __comp_inst->axis_yl_tmc_current_hold_delay_cmd,
            .ramp_mode_cmd              = __comp_inst->axis_yl_tmc_ramp_mode_cmd,
            .ramp_vstart_cmd            = __comp_inst->axis_yl_tmc_ramp_vstart_cmd,
            .ramp_vstop_cmd             = __comp_inst->axis_yl_tmc_ramp_vstop_cmd,
            .ramp_v1_cmd                = __comp_inst->axis_yl_tmc_ramp_v1_cmd,
            .ramp_a1_cmd                = __comp_inst->axis_yl_tmc_ramp_a1_cmd,
            .ramp_dmax_cmd              = __comp_inst->axis_yl_tmc_ramp_dmax_cmd,
            .ramp_d1_cmd                = __comp_inst->axis_yl_tmc_ramp_d1_cmd,
            .ramp_tzerowait_cmd         = __comp_inst->axis_yl_tmc_ramp_tzerowait_cmd,
            .coolstep_sfilt_cmd         = __comp_inst->axis_yl_tmc_coolstep_sfilt_cmd,
            .coolstep_seimin_cmd        = __comp_inst->axis_yl_tmc_coolstep_seimin_cmd,
            .coolstep_sedn_cmd          = __comp_inst->axis_yl_tmc_coolstep_sedn_cmd,
            .coolstep_seup_cmd          = __comp_inst->axis_yl_tmc_coolstep_seup_cmd,
            .coolstep_semin_cmd         = __comp_inst->axis_yl_tmc_coolstep_semin_cmd,
            .coolstep_semax_cmd         = __comp_inst->axis_yl_tmc_coolstep_semax_cmd,
            .chop_mode_cmd              = __comp_inst->axis_yl_tmc_chop_mode_cmd,
            .chop_vhigh_cmd             = __comp_inst->axis_yl_tmc_chop_vhigh_cmd,
            .chop_vhighchm_cmd          = __comp_inst->axis_yl_tmc_chop_vhighchm_cmd,
            .chop_vhighfs_cmd           = __comp_inst->axis_yl_tmc_chop_vhighfs_cmd,
            .chop_tbl_cmd               = __comp_inst->axis_yl_tmc_chop_tbl_cmd,
            .chop_hend_cmd              = __comp_inst->axis_yl_tmc_chop_hend_cmd,
            .chop_hstrt_cmd             = __comp_inst->axis_yl_tmc_chop_hstrt_cmd,
            .chop_toff_cmd              = __comp_inst->axis_yl_tmc_chop_toff_cmd,
            .chop_vsense_cmd            = __comp_inst->axis_yl_tmc_chop_vsense_cmd,
            .sw_en_softstop             = __comp_inst->axis_yl_tmc_sw_en_softstop,
            .vmax_factor_cmd            = __comp_inst->axis_yl_tmc_vmax_factor_cmd,
            .position_fb                = &axis_yl_tmc_position_fb,
            .position_cmd               = &axis_yl_tmc_position_cmd,
            .velocity_fb                = &axis_yl_tmc_velocity_fb,
            .velocity_cmd               = &axis_yl_tmc_velocity_cmd,
            .motor_standstill_fb        = &axis_yl_tmc_motor_standstill_fb,
            .motor_full_stepping_fb     = &axis_yl_tmc_motor_full_stepping_fb,
            .motor_overtemp_warning_fb  = &axis_yl_tmc_motor_overtemp_warning_fb,
            .motor_overtemp_alarm_fb    = &axis_yl_tmc_motor_overtemp_alarm_fb,
            .motor_load_fb              = &axis_yl_tmc_motor_load_fb,
            .motor_current_fb           = &axis_yl_tmc_motor_current_fb,
            .motor_stall_fb             = &axis_yl_tmc_motor_stall_fb,
            .microstep_resolution_fb    = &axis_yl_tmc_microstep_resolution_fb,
            .velocity_reached_fb        = &axis_yl_tmc_velocity_reached_fb,
            .status_sg_fb               = &axis_yl_tmc_status_sg_fb,
            .position_reached_fb        = &axis_yl_tmc_position_reached_fb,
            .event_pos_reached_fb       = &axis_yl_tmc_event_pos_reached_fb,
            .event_stop_sg_fb           = &axis_yl_tmc_event_stop_sg_fb,
            .event_stop_r_fb            = &axis_yl_tmc_event_stop_r_fb,
            .event_stop_l_fb            = &axis_yl_tmc_event_stop_l_fb,
            .status_latch_r_fb          = &axis_yl_tmc_status_latch_r_fb,
            .status_latch_l_fb          = &axis_yl_tmc_status_latch_l_fb,
            .status_stop_r_fb           = &axis_yl_tmc_status_stop_r_fb,
            .status_stop_l_fb           = &axis_yl_tmc_status_stop_l_fb
        }
    };
    __comp_inst->joints[2] = (joint_t) {
        .max_acceleration_cmd           = __comp_inst->axis_yr_max_acceleration_cmd,
        .pitch_cmd                      = __comp_inst->axis_yr_pitch,
        .teeth_cmd                      = __comp_inst->axis_yr_teeth,
        .motor_fullsteps_per_rev_cmd    = __comp_inst->axis_yr_motor_fullsteps_per_rev_cmd,
        .microsteps_cmd                 = __comp_inst->axis_yr_microsteps_cmd,
        .enable_cmd                     = __comp_inst->axis_yr_enable,
        .homing_cmd                     = __comp_inst->axis_yr_homing_cmd,
        .position_cmd                   = __comp_inst->axis_yr_position_cmd,
        .velocity_cmd                   = __comp_inst->axis_yr_velocity_cmd,
        .acceleration_cmd               = __comp_inst->axis_yr_acceleration_cmd,
        .position_fb                    = &axis_yr_position_fb,
        .velocity_fb                    = &axis_yr_velocity_fb,
        .acceleration_fb                = &axis_yr_acceleration_fb,
        .home_sw_fb                     = &axis_yr_home_sw,
        .homing_state_fb                = &axis_yr_homing_state_fb,
        .estop_fb                       = &machine_estop_fb,
        .torch_breakaway_fb             = &torch_breakaway,
        .tmc = (tmc5041_motor_t) {
            .velocity_time_ref          = tmc5041_velocity_time_ref(TMC5041_CLOCK_HZ),
            .acceleration_time_ref      = tmc5041_acceleration_time_ref(TMC5041_CLOCK_HZ),
            .chip                       = __comp_inst->axis_yr_chip,
            .motor                      = __comp_inst->axis_yr_motor,
            .run_current_cmd            = __comp_inst->axis_yr_tmc_run_current_cmd,
            .hold_current_cmd           = __comp_inst->axis_yr_tmc_hold_current_cmd,
            .cs_thresh_cmd              = __comp_inst->axis_yr_tmc_cs_thresh_cmd,
            .sg_stop_cmd                = __comp_inst->axis_yr_tmc_sg_stop_cmd,
            .sg_thresh_cmd              = __comp_inst->axis_yr_tmc_sg_thresh_cmd,
            .sg_trigger_thresh_cmd      = __comp_inst->axis_yr_tmc_sg_trigger_thresh_cmd,
            .current_hold_delay_cmd     = __comp_inst->axis_yr_tmc_current_hold_delay_cmd,
            .ramp_mode_cmd              = __comp_inst->axis_yr_tmc_ramp_mode_cmd,
            .ramp_vstart_cmd            = __comp_inst->axis_yr_tmc_ramp_vstart_cmd,
            .ramp_vstop_cmd             = __comp_inst->axis_yr_tmc_ramp_vstop_cmd,
            .ramp_v1_cmd                = __comp_inst->axis_yr_tmc_ramp_v1_cmd,
            .ramp_a1_cmd                = __comp_inst->axis_yr_tmc_ramp_a1_cmd,
            .ramp_dmax_cmd              = __comp_inst->axis_yr_tmc_ramp_dmax_cmd,
            .ramp_d1_cmd                = __comp_inst->axis_yr_tmc_ramp_d1_cmd,
            .ramp_tzerowait_cmd         = __comp_inst->axis_yr_tmc_ramp_tzerowait_cmd,
            .coolstep_sfilt_cmd         = __comp_inst->axis_yr_tmc_coolstep_sfilt_cmd,
            .coolstep_seimin_cmd        = __comp_inst->axis_yr_tmc_coolstep_seimin_cmd,
            .coolstep_sedn_cmd          = __comp_inst->axis_yr_tmc_coolstep_sedn_cmd,
            .coolstep_seup_cmd          = __comp_inst->axis_yr_tmc_coolstep_seup_cmd,
            .coolstep_semin_cmd         = __comp_inst->axis_yr_tmc_coolstep_semin_cmd,
            .coolstep_semax_cmd         = __comp_inst->axis_yr_tmc_coolstep_semax_cmd,
            .chop_mode_cmd              = __comp_inst->axis_yr_tmc_chop_mode_cmd,
            .chop_vhigh_cmd             = __comp_inst->axis_yr_tmc_chop_vhigh_cmd,
            .chop_vhighchm_cmd          = __comp_inst->axis_yr_tmc_chop_vhighchm_cmd,
            .chop_vhighfs_cmd           = __comp_inst->axis_yr_tmc_chop_vhighfs_cmd,
            .chop_tbl_cmd               = __comp_inst->axis_yr_tmc_chop_tbl_cmd,
            .chop_hend_cmd              = __comp_inst->axis_yr_tmc_chop_hend_cmd,
            .chop_hstrt_cmd             = __comp_inst->axis_yr_tmc_chop_hstrt_cmd,
            .chop_toff_cmd              = __comp_inst->axis_yr_tmc_chop_toff_cmd,
            .chop_vsense_cmd            = __comp_inst->axis_yr_tmc_chop_vsense_cmd,
            .sw_en_softstop             = __comp_inst->axis_yr_tmc_sw_en_softstop,
            .vmax_factor_cmd            = __comp_inst->axis_yr_tmc_vmax_factor_cmd,
            .position_fb                = &axis_yr_tmc_position_fb,
            .position_cmd               = &axis_yr_tmc_position_cmd,
            .velocity_fb                = &axis_yr_tmc_velocity_fb,
            .velocity_cmd               = &axis_yr_tmc_velocity_cmd,
            .motor_standstill_fb        = &axis_yr_tmc_motor_standstill_fb,
            .motor_full_stepping_fb     = &axis_yr_tmc_motor_full_stepping_fb,
            .motor_overtemp_warning_fb  = &axis_yr_tmc_motor_overtemp_warning_fb,
            .motor_overtemp_alarm_fb    = &axis_yr_tmc_motor_overtemp_alarm_fb,
            .motor_load_fb              = &axis_yr_tmc_motor_load_fb,
            .motor_current_fb           = &axis_yr_tmc_motor_current_fb,
            .motor_stall_fb             = &axis_yr_tmc_motor_stall_fb,
            .microstep_resolution_fb    = &axis_yr_tmc_microstep_resolution_fb,
            .velocity_reached_fb        = &axis_yr_tmc_velocity_reached_fb,
            .status_sg_fb               = &axis_yr_tmc_status_sg_fb,
            .position_reached_fb        = &axis_yr_tmc_position_reached_fb,
            .event_pos_reached_fb       = &axis_yr_tmc_event_pos_reached_fb,
            .event_stop_sg_fb           = &axis_yr_tmc_event_stop_sg_fb,
            .event_stop_r_fb            = &axis_yr_tmc_event_stop_r_fb,
            .event_stop_l_fb            = &axis_yr_tmc_event_stop_l_fb,
            .status_latch_r_fb          = &axis_yr_tmc_status_latch_r_fb,
            .status_latch_l_fb          = &axis_yr_tmc_status_latch_l_fb,
            .status_stop_r_fb           = &axis_yr_tmc_status_stop_r_fb,
            .status_stop_l_fb           = &axis_yr_tmc_status_stop_l_fb
        }
    };
    __comp_inst->joints[3] = (joint_t) {
        .max_acceleration_cmd           = __comp_inst->axis_z_max_acceleration_cmd,
        .pitch_cmd                      = __comp_inst->axis_z_pitch,
        .teeth_cmd                      = __comp_inst->axis_z_teeth,
        .motor_fullsteps_per_rev_cmd    = __comp_inst->axis_z_motor_fullsteps_per_rev_cmd,
        .microsteps_cmd                 = __comp_inst->axis_z_microsteps_cmd,
        .enable_cmd                     = __comp_inst->axis_z_enable,
        .homing_cmd                     = __comp_inst->axis_z_homing_cmd,
        .position_cmd                   = __comp_inst->axis_z_position_cmd,
        .velocity_cmd                   = __comp_inst->axis_z_velocity_cmd,
        .acceleration_cmd               = __comp_inst->axis_z_acceleration_cmd,
        .position_fb                    = &axis_z_position_fb,
        .velocity_fb                    = &axis_z_velocity_fb,
        .acceleration_fb                = &axis_z_acceleration_fb,
        .home_sw_fb                     = &axis_z_home_sw,
        .homing_state_fb                = &axis_z_homing_state_fb,
        .estop_fb                       = &machine_estop_fb,
        .torch_breakaway_fb             = &torch_breakaway,
        .tmc = (tmc5041_motor_t) {
            .velocity_time_ref          = tmc5041_velocity_time_ref(TMC5041_CLOCK_HZ),
            .acceleration_time_ref      = tmc5041_acceleration_time_ref(TMC5041_CLOCK_HZ),
            .chip                       = __comp_inst->axis_z_chip,
            .motor                      = __comp_inst->axis_z_motor,
            .run_current_cmd            = __comp_inst->axis_z_tmc_run_current_cmd,
            .hold_current_cmd           = __comp_inst->axis_z_tmc_hold_current_cmd,
            .cs_thresh_cmd              = __comp_inst->axis_z_tmc_cs_thresh_cmd,
            .sg_stop_cmd                = __comp_inst->axis_z_tmc_sg_stop_cmd,
            .sg_thresh_cmd              = __comp_inst->axis_z_tmc_sg_thresh_cmd,
            .sg_trigger_thresh_cmd      = __comp_inst->axis_z_tmc_sg_trigger_thresh_cmd,
            .current_hold_delay_cmd     = __comp_inst->axis_z_tmc_current_hold_delay_cmd,
            .ramp_mode_cmd              = __comp_inst->axis_z_tmc_ramp_mode_cmd,
            .ramp_vstart_cmd            = __comp_inst->axis_z_tmc_ramp_vstart_cmd,
            .ramp_vstop_cmd             = __comp_inst->axis_z_tmc_ramp_vstop_cmd,
            .ramp_v1_cmd                = __comp_inst->axis_z_tmc_ramp_v1_cmd,
            .ramp_a1_cmd                = __comp_inst->axis_z_tmc_ramp_a1_cmd,
            .ramp_dmax_cmd              = __comp_inst->axis_z_tmc_ramp_dmax_cmd,
            .ramp_d1_cmd                = __comp_inst->axis_z_tmc_ramp_d1_cmd,
            .ramp_tzerowait_cmd         = __comp_inst->axis_z_tmc_ramp_tzerowait_cmd,
            .coolstep_sfilt_cmd         = __comp_inst->axis_z_tmc_coolstep_sfilt_cmd,
            .coolstep_seimin_cmd        = __comp_inst->axis_z_tmc_coolstep_seimin_cmd,
            .coolstep_sedn_cmd          = __comp_inst->axis_z_tmc_coolstep_sedn_cmd,
            .coolstep_seup_cmd          = __comp_inst->axis_z_tmc_coolstep_seup_cmd,
            .coolstep_semin_cmd         = __comp_inst->axis_z_tmc_coolstep_semin_cmd,
            .coolstep_semax_cmd         = __comp_inst->axis_z_tmc_coolstep_semax_cmd,
            .chop_mode_cmd              = __comp_inst->axis_z_tmc_chop_mode_cmd,
            .chop_vhigh_cmd             = __comp_inst->axis_z_tmc_chop_vhigh_cmd,
            .chop_vhighchm_cmd          = __comp_inst->axis_z_tmc_chop_vhighchm_cmd,
            .chop_vhighfs_cmd           = __comp_inst->axis_z_tmc_chop_vhighfs_cmd,
            .chop_tbl_cmd               = __comp_inst->axis_z_tmc_chop_tbl_cmd,
            .chop_hend_cmd              = __comp_inst->axis_z_tmc_chop_hend_cmd,
            .chop_hstrt_cmd             = __comp_inst->axis_z_tmc_chop_hstrt_cmd,
            .chop_toff_cmd              = __comp_inst->axis_z_tmc_chop_toff_cmd,
            .chop_vsense_cmd            = __comp_inst->axis_z_tmc_chop_vsense_cmd,
            .sw_en_softstop             = __comp_inst->axis_z_tmc_sw_en_softstop,
            .vmax_factor_cmd            = __comp_inst->axis_z_tmc_vmax_factor_cmd,
            .position_fb                = &axis_z_tmc_position_fb,
            .position_cmd               = &axis_z_tmc_position_cmd,
            .velocity_fb                = &axis_z_tmc_velocity_fb,
            .velocity_cmd               = &axis_z_tmc_velocity_cmd,
            .motor_standstill_fb        = &axis_z_tmc_motor_standstill_fb,
            .motor_full_stepping_fb     = &axis_z_tmc_motor_full_stepping_fb,
            .motor_overtemp_warning_fb  = &axis_z_tmc_motor_overtemp_warning_fb,
            .motor_overtemp_alarm_fb    = &axis_z_tmc_motor_overtemp_alarm_fb,
            .motor_load_fb              = &axis_z_tmc_motor_load_fb,
            .motor_current_fb           = &axis_z_tmc_motor_current_fb,
            .motor_stall_fb             = &axis_z_tmc_motor_stall_fb,
            .microstep_resolution_fb    = &axis_z_tmc_microstep_resolution_fb,
            .velocity_reached_fb        = &axis_z_tmc_velocity_reached_fb,
            .status_sg_fb               = &axis_z_tmc_status_sg_fb,
            .position_reached_fb        = &axis_z_tmc_position_reached_fb,
            .event_pos_reached_fb       = &axis_z_tmc_event_pos_reached_fb,
            .event_stop_sg_fb           = &axis_z_tmc_event_stop_sg_fb,
            .event_stop_r_fb            = &axis_z_tmc_event_stop_r_fb,
            .event_stop_l_fb            = &axis_z_tmc_event_stop_l_fb,
            .status_latch_r_fb          = &axis_z_tmc_status_latch_r_fb,
            .status_latch_l_fb          = &axis_z_tmc_status_latch_l_fb,
            .status_stop_r_fb           = &axis_z_tmc_status_stop_r_fb,
            .status_stop_l_fb           = &axis_z_tmc_status_stop_l_fb
        }
    };

    hotshot_init(__comp_inst->joints, MOTOR_COUNT);

    IS_INITIALIZED = TRUE;

    printf("hotshot: Initializing driver complete\n");
}

// Must be loaded first in hal config since it initializes joints array.
FUNCTION(spi)
{
    ensure_initialized(__comp_inst);
    hotshot_spi(__comp_inst->joints, MOTOR_COUNT);
}

FUNCTION(_)
{
    // ensure_initialized(__comp_inst);
    hotshot_handle_joints(__comp_inst->joints, MOTOR_COUNT);
}

FUNCTION(x)
{
    hotshot_handle_move(&__comp_inst->joints[0]);
    hotshot_handle_homing(&__comp_inst->joints[0]);
}

FUNCTION(yl)
{
    hotshot_handle_move(&__comp_inst->joints[1]);
    hotshot_handle_homing(&__comp_inst->joints[1]);
}

FUNCTION(yr)
{
    hotshot_handle_move(&__comp_inst->joints[2]);
    hotshot_handle_homing(&__comp_inst->joints[2]);
}

FUNCTION(z)
{
    hotshot_handle_move(&__comp_inst->joints[3]);
    hotshot_handle_homing(&__comp_inst->joints[3]);
}

FUNCTION(arc) 
{
    uint8_t arc_freq_level = bcm2835_gpio_lev(PIN_ARC_FREQ);
    if (arc_freq_level == HIGH)
    {
        arc_freq_state = TRUE;
    }
    else
    {
        arc_freq_state = FALSE;
    }
}

FUNCTION(sensors)
{
    // ensure_initialized(__comp_inst);

    // Removed in favor of Stallguard based breakaway
    //
    // Read in breakaway switch state and set breakaway pin bit
    //  plasmac.breakaway bit in
    //      torch breakaway switch (optional, see float_switch)
    // uint8_t torch_breakaway_level = bcm2835_gpio_lev(PIN_TORCH_BREAKAWAY);
    // if (torch_breakaway_level == LOW)
    // {
    //     torch_breakaway = TRUE;
    // }
    // else
    // {
    //     torch_breakaway = FALSE;
    // }

    // Read in ohmic probe contact state and set ohmic_probe pin bit
    //  plasmac.ohmic-probe bit in
    //      ohmic probe input
    uint8_t ohmic_probe_level = bcm2835_gpio_lev(PIN_OHMIC_PROBE);
    if (ohmic_probe_level == HIGH)
    {
        ohmic_probe = TRUE;
    }
    else
    {
        ohmic_probe = FALSE;
    }

    // Read in ohmic probe contact state and set ohmic_probe pin bit
    // estop is wired fail safe, i.e. active low.
    // However, PlasmaC expects FALSE to indicate active estop
    uint8_t estop_level = bcm2835_gpio_lev(PIN_ESTOP);
    if (estop_level == HIGH)
    {
        machine_estop_fb = TRUE;
    }
    else
    {
        machine_estop_fb = FALSE;
    }

    // Read ARC_OK signal
    uint8_t arc_ok_level = bcm2835_gpio_lev(PIN_ARC_OK);
    if (arc_ok_level == HIGH)
    {
        arc_ok = TRUE;
    }
    else
    {
        arc_ok = FALSE;
    }

    // Read torch float signal
    // Signal is active low.
    uint8_t torch_float_level = bcm2835_gpio_lev(PIN_TORCH_FLOAT);
    if (torch_float_level == HIGH)
    {
        torch_float = FALSE;
    }
    else
    {
        torch_float = TRUE;
    }

    // Read in ohmic_enable pin and enable/disable ohmic sensor relay
    //  plasmac.ohmic-enable bit out
    //      on only while probing
    if (ohmic_enable)
    {
        bcm2835_gpio_set(PIN_OHMIC_ENABLE);
    }
    else
    {
        bcm2835_gpio_clr(PIN_OHMIC_ENABLE);
    }

    // Read in torch_on pin bit and enable/disable torch fire relay
    //  plasmac.torch-on bit out
    //      turn torch on, connect to your torch on input
    if (torch_on)
    {
        bcm2835_gpio_set(PIN_TORCH_ON);
    }
    else
    {
        bcm2835_gpio_clr(PIN_TORCH_ON);
    }
}

FUNCTION(rms)
{
    // Subtract the square of the old sample at the current index from the sum of squares
    sum_of_squares -= sample_buffer[current_index] * sample_buffer[current_index];

    // Update the buffer with the new sample
    sample_buffer[current_index] = voltage_in;

    // Add the square of the new sample to the sum of squares
    sum_of_squares += voltage_in * voltage_in;

    // Move the current index in a circular fashion
    current_index = (current_index + 1) % num_samples;

    // Calculate the RMS using the updated sum of squares
    rms_out = sqrt(sum_of_squares / num_samples);
}

// TODO is this still needed?
EXTRA_CLEANUP()
{
    printf("hotshot: Stopping driver\n");

    hotshot_end(&__comp_inst->joints, MOTOR_COUNT);

    IS_INITIALIZED = FALSE;

    printf("hotshot: Stopping driver complete\n");
}

// HAL Module
// ============================================================================
